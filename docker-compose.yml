version: '3'
services:

# MY APP
  web1:
    build: ./main
    container_name: web1
    restart: always
    command: bash -c "python main.py run -h 0.0.0.0"
    depends_on:
      - db
    volumes:
      - ./main:/main
    ports:
      - 5000:5000
    env_file: .env
    hostname: web1
    image: app-image
    networks:
      - main

  web2:
    build: ./main
    container_name: web2
    restart: always
    command: bash -c "python main.py run -h 0.0.0.0"
    depends_on:
      - db
    volumes:
      - ./main:/main
    ports:
      - 5001:5000
    env_file: .env
    hostname: web2
    image: app-image
    networks:
      - main

  worker:
    container_name: worker
    command: bash -c "python consumer.py"
    restart: always
    volumes:
      - ./worker:/worker
    env_file: .env
    depends_on:
      - web1
      - web2
      - rabbit
      - db
    hostname: worker
    image: app-image
    networks:
      - main

  nginx:
    build: ./nginx
    ports:
      - 1337:80
    depends_on:
      - web1
      - web2
    networks:
      - main

# SERVICES
  rabbit:
    image: rabbitmq:3-management
    hostname: "rabbit"
    container_name: rabbit
    env_file: .env
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - main
    logging:
      driver: none

  db:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=hello_flask
      - POSTGRES_PASSWORD=hello_flask
      - POSTGRES_DB=hello_flask_dev
    env_file: .env
    ports:
      - 5432:5432
    networks:
      - main

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    restart: always
    networks:
      - main

networks:
  main:
